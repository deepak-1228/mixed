############# Application Context ###############
spring.application.name=user
server.servlet.context-path=/user
server.port=8015

############## Application Access Logs Config ##############
server.tomcat.max-threads=70
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=/var/log/stanza
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
server.tomcat.accesslog.prefix=user_access_log
server.tomcat.accesslog.pattern=%{X-Forwarded-For}i %h %A '%{User-Agent}i'; "%{Referer}i" "%l" "%u" %t %{guid}r %{luid}r %{customId1}r %{customId2}r \u201C%r\u201C %I %s %b %F %D
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.rotate=true

########### AWS Parameter Store Config ##################
cloud.aws.credentials.accessKey=
cloud.aws.credentials.secretKey=
cloud.aws.region=
awsParameterStorePropertySource.enabled=false
awsParameterStorePropertyContextPath=

############# Salt for Hashing Password ############
bcrypt.salt=$2a$04$YmlGkEv4eoS6PWZm7crcMu

############# Environment Type & Test Mobile Nos for Fixed OTP ################
environment.type=prod
test.mobile=8744012299,9716554117,9871024301,2892899999,2362362364,9456055610,9960884406,8447321920,9620202125,8447837009,9030098586,9880311114,9967415301,8585010135,9811666520,9717243757,8826814440,8800809628,9582087770,9810569200,9821768144,8447837009,8585010135,9838071433,8512006621,8130792977,9643422796,9560907908,8356852862,8377007308,8826016224

############# OTP Settings ##################
otp.length=4
otp.expiry.minutes=5
otp.max.resend.count=5
otp.resend.enable.seconds=30
otp.max.validate.count=5
otp.max.validated.count=3
otp.email.enabled=true
email.from=noreply@stanzaliving.com

############# User Inactivity Times In Minutes #############
inactive.minutes.student=0
inactive.minutes.parent=0
inactive.minutes.legal=180
inactive.minutes.hr=180
inactive.minutes.tech=0
inactive.minutes.finance=180
inactive.minutes.procurement=1440

######################### OTP Messages #######################
mobile.otp.HashKey=5t82KfAB8Hz

student.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
parent.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
legal.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
hr.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
tech.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
finance.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
procurement.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 
default.otp.msg=<otp> is the OTP to verify your phone number for accessing Stanza Living application. 

mobile.verification.otp.msg=<otp> is OTP to verify your phone number with Stanza Living
email.verification.otp.msg=Hi <residentName>\nThe OTP to verify your email with Stanza Living is <otp>.\nPlease do not share this anyone including Stanza employees.
user.verification.otp.msg=<otp> is your OTP to authenticate with Stanza Living

################# MySQL JDBC Connection mChange C3P0 ###############
jdbc.driver.class.name=com.mysql.cj.jdbc.Driver
jdbc.master.url=jdbc:mysql://prod-rds-erp.stanzaliving.com:3306/user_service?autoReconnect=true&zeroDateTimeBehavior=convertToNull&useSSL=false
jdbc.slave.url=jdbc:mysql://prod-rds-erp.stanzaliving.com:3306/user_service?autoReconnect=true&zeroDateTimeBehavior=convertToNull&useSSL=false
jdbc.master.username=user_service
jdbc.master.password=kWF4,N(#3"T/=tBN
jdbc.slave.username=user_service_read
jdbc.slave.password=WJw+K)}x%PP,v2N/
jdbc.initial.pool.size=50
jdbc.min.pool.size=50
jdbc.max.pool.size=80
jdbc.acquire.increment=20
jdbc.max.statements=500
jdbc.max.idle.time=300
jdbc.max.idle.time.excess.connections=300
jdbc.checkout.timeout=5000
jdbc.max.connectionage=30
jdbc.StatementCacheNumDeferredCloseThreads = 1
jdbc.NumHelperThreads = 15
jdbc.preferred.test.query=SELECT 1
jdbc.test.connection.on.checkin=true

############ Hibernate Configuration ##############
hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.show_sql=true
hibernate.format_sql=true
hibernate.hbm2ddl.auto=validate
hibernate.order_inserts=true
hibernate.order_updates=true

################################# Redis Config ##################################################
redis.server.address=redis://redis-pub.stanzaliving.com:6379
redis.database=0
redis.connection.pool.size=70
redis.connection.pool.size.min=5
redis.connection.timeout=5000

################################# Kafka Properties ##############################
spring.kafka.bootstrap-servers=12.0.3.217:9092,12.0.3.192:9092,12.0.4.18:9092
spring.kafka.client-id=userClient
spring.kafka.admin.fail-fast=true
spring.kafka.listener.type=batch

spring.kafka.producer.acks=1
spring.kafka.producer.retries=1
spring.kafka.producer.properties.max.request.size=21943040
spring.kafka.producer.properties.message.max.bytes=21943040

spring.kafka.consumer.group-id=user-consumer-group
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.fetch-max-wait=100ms
spring.kafka.consumer.fetch-min-size=10
spring.kafka.consumer.max-poll-records=200
spring.kafka.consumer.properties.fetch.max.bytes=20971520
spring.kafka.consumer.properties.max.partition.fetch.bytes=10485760

################################# Kafka Topics ##################################
kafka.topic.sms=sms
kafka.topic.sms.otp=sms_otp
kafka.topic.email=email
kafka.topic.email.otp=email_otp
kafka.topic.user=user
kafka.topic.acl=acl
kafka.resident.detail.topic=resident_detail

######## Service URLs ###################
service.transformationmaster.url=https://transformation.stanzaliving.com/transformationmaster
service.notificationClient.url=https://erp.stanzaliving.com/notification-service/
service.lead.url=https://prodims.stanzaliving.com/leadservice
service.booking.url=https://venta.stanzaliving.com/bookingService-v2/

kafka.topic.role=user_roles
##################### User Thread Pool Executor ###################
user.thread.pool.size=5
user.thread.max.pool.size=5
user.thread.keepAliveSeconds=18000
user.thread.queue.capacity=100000

################################# healthcheck spring properties ##################################
management.endpoint.health.show-details=ALWAYS
management.health.db.enabled=false
management.health.diskspace.enabled=false

########## Slack Properties ##############
enable.slack.exception=true
service.slack.url=https://hooks.slack.com/services/
service.slack.exception.endUrl=TJ9PYKSFQ/B019G63R6QZ/D8xmlSZmeCepfMwNDnoeoFdB

########## External And Consumer Role Id ##############
consumer.role =d4477d58-705e-4544-841c-b8e4fe97311f
broker.role=3f2c0a3e-b8df-43b5-bc47-31da04309bb2
country.uuid=7d0e47bf-52c0-4560-924e-e6599e56501a
sigmaManageSales.role=7b9c777e-589b-49b8-9cc9-5dec9e21e374

############################ Scheduling #########################
jobs.enabled=true

############################## Deep-link-Config ##############################
application.name=StanzaAlfred
birthday.deep-link.url=slliv://alfred/home
birthday.notification.title=There is something you should know
birthday.notification.description=And we want to be the first ones to tell you. Tap to know more.


cloud.aws.stack.auto=false
spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextInstanceDataAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextCredentialsAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextResourceLoaderAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.mail.MailSenderAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.cache.ElastiCacheAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.messaging.MessagingAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.jdbc.AmazonRdsDatabaseAutoConfiguration,\
 org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchExportAutoConfiguration